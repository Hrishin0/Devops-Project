# version: 0.2

# env:
#   secrets-manager:
#     LOGIN: prod/hrishin:sonartoken
#     HOST: prod/hrishin:HOST
#     Organization: prod/hrishin:Organization
#     Project: prod/hrishin:Project
# phases:
#     install:
#         runtime-versions:
#             python: 3.11
            
#         commands:
#             - pip install --upgrade pip
#             # Install dependencies needed for running the static analysis
#             - pip install -r requirements.txt pylint
#             - java --version
#             - yum update -y
#             - yum install -y jq
#             - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
#             - unzip ./sonar-scanner-cli-4.7.0.2747-linux.zip
#             - export PATH=$PATH:$PWD/sonar-scanner-4.7.0.2747-linux/bin/
#             - python --version
#     pre_build:
#         commands:
#             - python --version
#             # - pylint $CODEBUILD_SRC_DIR/*.py
#             - pylint $CODEBUILD_SRC_DIR/website/*.py
#             - sleep 5
#             - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=prajwalsr7_DiscussHub > analysis.json
#             - cat analysis.json
#     build:
#         commands:
#             - mvn test     
#             - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
#             - sleep 5
#             - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
#             - cat result.json
#             - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
# artifacts:
#     files:
#         - '**/*'



version: 0.2

env:
  secrets-manager:
    LOGIN: prod/hrishin:sonartoken
    HOST: prod/hrishin:HOST
    Organization: prod/hrishin:Organization
    Project: prod/hrishin:Project
    
phases:
  install:
    runtime-versions:
      java: corretto17  # Updated runtime version
  pre_build:
    commands:
      - yum update -y     # Equivalent to apt-get update
      - yum install -y jq # Install jq using yum package manager
      - retry_count=3
      - for i in $(seq 1 $retry_count); do wget https://archive.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz && break || sleep 10; done
      - tar xzf apache-maven-3.5.4-bin.tar.gz || true
      - ln -s apache-maven-3.5.4 maven
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
  build:
    commands:
      - mvn test -X
      - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=https://sonarcloud.io/ -Dsonar.projectKey=$Project -Dsonar.organization=$Organization || true
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey="" > result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ]; then $CODEBUILD_BUILD_SUCCEEDING -eq 0; fi